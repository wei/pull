// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schema [{"version":"1","rules":[{"base":"master","upstream":"upstream:master","mergeMethod":""}]}] is invalid 1`] = `"ValidationError: \\"value\\" must be an object"`;

exports[`schema [{"version":"1","rules":[{"base":"master","upstream":"upstream:master","mergeMethod":"invalid"}]}] is invalid 1`] = `"ValidationError: \\"value\\" must be an object"`;

exports[`schema [{"version":"1","rules":[{"base":"master","upstream":"upstream:master","mergeMethod":true}]}] is invalid 1`] = `"ValidationError: \\"value\\" must be an object"`;

exports[`schema {"rules":{}} is invalid 1`] = `"ValidationError: child \\"version\\" fails because [\\"version\\" is required]"`;

exports[`schema {"version":""} is invalid 1`] = `"ValidationError: child \\"version\\" fails because [\\"version\\" is not allowed to be empty]"`;

exports[`schema {"version":"1","rules":[]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" does not contain 1 required value(s)]"`;

exports[`schema {"version":"1","rules":[{"base":"master","autoMerge":""}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"upstream\\" fails because [\\"upstream\\" is required]]]"`;

exports[`schema {"version":"1","rules":[{"base":"master","autoMerge":1}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"upstream\\" fails because [\\"upstream\\" is required]]]"`;

exports[`schema {"version":"1","rules":[{"base":"master","upstream":""}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"upstream\\" fails because [\\"upstream\\" is not allowed to be empty]]]"`;

exports[`schema {"version":"1","rules":[{"base":"master","upstream":"upstream:master","assignees":""}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"assignees\\" fails because [\\"assignees\\" must be an array]]]"`;

exports[`schema {"version":"1","rules":[{"base":"master","upstream":"upstream:master","autoMerge":true,"autoMergeHardReset":""}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"autoMergeHardReset\\" fails because [\\"autoMergeHardReset\\" must be a boolean]]]"`;

exports[`schema {"version":"1","rules":[{"base":"master","upstream":"upstream:master","autoMerge":true,"autoMergeHardReset":1}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"autoMergeHardReset\\" fails because [\\"autoMergeHardReset\\" must be a boolean]]]"`;

exports[`schema {"version":"1","rules":[{"base":"master","upstream":"upstream:master","reviewers":"","conflictReviewers":""}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"reviewers\\" fails because [\\"reviewers\\" must be an array]]]"`;

exports[`schema {"version":"1","rules":[{"base":"master","upstream":"upstream:master","reviewers":""}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"reviewers\\" fails because [\\"reviewers\\" must be an array]]]"`;

exports[`schema {"version":"1","rules":[{"base":"master","upstream":"upstream:master"}],"label":""} is invalid 1`] = `"ValidationError: child \\"label\\" fails because [\\"label\\" is not allowed to be empty]"`;

exports[`schema {"version":"1","rules":[{"base":"master","upstream":"upstream:master"}],"label":1} is invalid 1`] = `"ValidationError: child \\"label\\" fails because [\\"label\\" must be a string]"`;

exports[`schema {"version":"1","rules":[{"base":"master"}]} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" at position 0 fails because [child \\"upstream\\" fails because [\\"upstream\\" is required]]]"`;

exports[`schema {"version":"1"} is invalid 1`] = `"ValidationError: child \\"rules\\" fails because [\\"rules\\" is required]"`;

exports[`schema {"version":1,"rules":[{"base":"master","upstream":"upstream:master"}]} is invalid 1`] = `"ValidationError: child \\"version\\" fails because [\\"version\\" must be a string]"`;

exports[`schema {} is invalid 1`] = `"ValidationError: child \\"version\\" fails because [\\"version\\" is required]"`;
